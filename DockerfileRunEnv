FROM ros2bdi-build-env

# source entrypoint setup
RUN sed --in-place --expression \
      '$isource "/root/plansys2_ws/install/setup.bash"' \
      /ros_entrypoint.sh

# source entrypoint setup
RUN sed --in-place --expression \
      '$isource "/root/ros2bdi_ws/install/setup.bash"' \
      /ros_entrypoint.sh

CMD ["/bin/bash", "-c", \
    "source /root/ros2bdi_ws/install/setup.bash && source /opt/ros/humble/setup.bash && source /root/plansys2_ws/install/setup.bash"]

# build
# sudo docker build --platform=linux/amd64 --rm  --tag ros2bdi-run-env --file DockerfileRunEnv .

# run world
# docker run --platform=linux/amd64 -v .:/root/ros2bdi_ws -v /Users/Shared/shared:/root/shared -e "WEBOTS_SHARED_FOLDER=/Users/Shared/shared:/root/shared" --rm -it --name ros2bdi ros2bdi-run-env ros2 launch webots_ros2_simulations blocks_world.launch.py
# 
# and then agents
# docker run --platform=linux/amd64 -v ./tmp:/tmp --rm -it ros2bdi-run-env ros2 launch ros2_bdi_on_webots carrier_a.launch.py
# docker run --platform=linux/amd64 -v ./tmp:/tmp --rm -it ros2bdi-run-env ros2 launch ros2_bdi_on_webots carrier_b.launch.py
# docker run --platform=linux/amd64 -v ./tmp:/tmp --rm -it ros2bdi-run-env ros2 launch ros2_bdi_on_webots carrier_c.launch.py
# docker run --platform=linux/amd64 -v ./tmp:/tmp --rm -it ros2bdi-run-env ros2 launch ros2_bdi_on_webots gripper_a.launch.py
# 
# First of all, to use webots on host machine (while ros2bdi on docker):
# MAC: export WEBOTS_HOME=/Applications/Webots.app
# LINUX: export WEBOTS_HOME=/usr/local/webots
# export WEBOTS_HOME_PATH=$WEBOTS_HOME/Contents # This should not be necessary
# python3 local_simulation_server.py
#
# On mac, because of network of docker virtual machine, need also to forward request from docker VM to host machine
# docker run --rm -d --name=forwarder-container2000 --network=host alpine/socat TCP-LISTEN:2000,fork TCP:host.docker.internal:2000
# docker run --rm -d --name=forwarder-container1234 --network=host alpine/socat TCP-LISTEN:1234,fork TCP:host.docker.internal:1234
